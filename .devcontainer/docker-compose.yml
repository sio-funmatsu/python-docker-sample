version: '3.8'
services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  web:
    # Uncomment if you want to override the service's Dockerfile to one in the .devcontainer
    # folder. Note that the path of the Dockerfile and context is relative to the *primary*
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array). The sample below assumes your primary file is in the root of your project.
    #
    # build:
    #   context: .
    #   dockerfile: .devcontainer/Dockerfile

    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      # - ..:/workspaces:cached
      - ./src:/workspaces/python-docker-sample/src:cached
      - ./scripts:/workspaces/python-docker-sample/scripts:cached
      - ./pyproject.toml:/workspaces/python-docker-sample/pyproject.toml:cached
      - ./README.md:/workspaces/python-docker-sample/README.md:cached
      - ./requirements.lock:/workspaces/python-docker-sample/requirements.lock:cached
      - ./requirements-dev.lock:/workspaces/python-docker-sample/requirements-dev.lock:cached
      - ./.python-version:/workspaces/python-docker-sample/.python-version:cached
      - ./.devcontainer:/workspaces/python-docker-sample/.devcontainer:cached
      - ./.vscode:/workspaces/python-docker-sample/.vscode:cached
      - ./docker:/workspaces/python-docker-sample/docker:cached
      - ./docker-compose.yml:/workspaces/python-docker-sample/docker-compose.yml:cached

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"
